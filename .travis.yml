## Note, "[ci skio]" or "[skip ci]" within a commit message _should_
##  cause Travis Continuous Integration to skip the following

## Clone settings for repository
git:
  depth: 10


## List of Operating Systems to test on
# dist: xenial
os:
  - linux


## Attempt to limit environment to only what is required
language: bash
matrix:
  fast_finish: true


branches:
  only:
    - master
  except:
    - gh-pages


## Maybe make following builds a little faster
# cache:
#   directories:
#     - /home/travis/.ssh


## Do the things
before_install:
  # - sudo apt-get install -yqq unbound nginx git-core git ruby-full nodejs gawk
  - sudo apt-get install -yqq unbound nginx git-core
  - mkdir -vp "/home/travis/.ssh"
  - ssh-keygen -q -t ecdsa -f "/home/travis/.ssh/bill" -C '' -N ''

install:
  - chmod +x Makefile
  - sudo make install-dependencies
  - sudo make install

before_script:
  - if ! [ -L "$(which jekyll_usermod.sh)" ]; then false; fi
  - if ! [ -L "$(which jekyll_dnsconf.sh)" ]; then false; fi
  - if ! [ -L "$(which jekyll_wwwconf.sh)" ]; then false; fi

script:
  - sudo jekyll_usermod.sh --user "Bill" --group "devs" --ssh-auth-keys "/home/travis/.ssh/bill.pub"
  - sudo jekyll_dnsconf.sh --domain "devs" --tld "lan"
  # - ssh Bill@localhost -o 'StrictHostKeyChecking accept-new' -i "/home/travis/.ssh/bill" jekyll-build Bill
  - ssh Bill@localhost -o 'StrictHostKeyChecking no' -i "/home/travis/.ssh/bill" jekyll-build Bill
  - sudo jekyll_wwwconf.sh --user "Bill" --domain "devs" --tld "lan" --repo "Bill"

after_failure:
  - echo 'after_failure asks - Where did you go wrong?'

after_success:
  - echo 'after_success states - No errors, this time...'

after_script:
  - echo 'after_script is all good!'


## Build phase order thanks be to,
##   https://docs.travis-ci.com/user/job-lifecycle/#the-job-lifecycle
# apt addons        (optional)
# cache components  (optional)
# before_install:
# install:
# before_script:
# script:
# before_cache:     (optional)
# after_success:
## ... Or ...
# after_failure:
# before_deploy:    (optional)
# deploy:           (optional)
# after_deploy:     (optional)
# after_script:
