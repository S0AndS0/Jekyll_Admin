## Note, "[ci skio]" or "[skip ci]" within a commit message _should_
##  cause Travis Continuous Integration to skip the following

## Clone settings for repository
git:
  quite: true
  submodules: false
  ## Note Git does not take kindly to pushes of the shallow kind
  depth: false


language: bash
matrix:
  fast_finish: true
  include:
    ## Default 'dist' was 'trusty' as of 2019
    - name: 'Linux Xenial'
      os: linux
      dist: xenial


branches:
  only:
    - gh-pages
    - /^(?i:test)-.*$/
  except:
    - master


# cache:
#   directories:
#     - /usr/local/etc/Jekyll_Admin


## Do the things
before_install:
  - mkdir -vp '/home/travis/.ssh'
  - ssh-keygen -q -t ecdsa -f '/home/travis/.ssh/bill' -C '' -N ''
  - tee -a '/home/travis/.ssh/config' 1>/dev/null <<<'Host bill'
  - tee -a '/home/travis/.ssh/config' 1>/dev/null <<<'    IdentitiesOnly yes'
  - tee -a '/home/travis/.ssh/config' 1>/dev/null <<<'    IdentityFile ~/.ssh/bill'
  - tee -a '/home/travis/.ssh/config' 1>/dev/null <<<'    User Bill'
  - tee -a '/home/travis/.ssh/config' 1>/dev/null <<<'    HostName localhost'

  ## Note ssh links should not be used in automation, instead
  ##  the following trusts the system certs for https protocol
  - sudo git clone https://github.com/S0AndS0/Jekyll_Admin.git "/usr/local/etc/Jekyll_Admin"

  - sudo apt-get install -yqq unbound nginx
  - _exit_status="$(cd /usr/local/etc/Jekyll_Admin && sudo make install-dependencies)"
  - _exit_status="$(cd /usr/local/etc/Jekyll_Admin && sudo make install)"

install:
  - sudo jekyll_usermod.sh --user 'Bill' --group 'devs' --ssh-pub-key '/home/travis/.ssh/bill.pub'
  - sudo jekyll_dnsconf.sh --domain 'devs' --tld 'lan'
  - sudo jekyll_wwwconf.sh --user 'Bill' --domain 'devs' --tld 'lan' --repo 'Bill' --clobber 'force'
  - sudo jekyll_wwwconf.sh --user 'Bill' --domain 'devs' --tld 'lan' --repo 'Jekyll_Admin' --clobber 'force'

before_script: true
  # - if ! [ -L "$(which jekyll_usermod.sh)" ]; then echo 'BUG usermod' && false; fi
  # - if ! [ -L "$(which jekyll_dnsconf.sh)" ]; then echo 'BUG dnsconf' && false; fi
  # - if ! [ -L "$(which jekyll_wwwconf.sh)" ]; then echo 'BUG wwcwonf' && false; fi

script:
  - ssh bill -o 'StrictHostKeyChecking no' list --license

  - git remote add test_server bill:git/Jekyll_Admin
  - ssh bill git-init Jekyll_Admin
  - ssh bill git-checkout -b gh-pages Jekyll_Admin
  - git push -f test_server gh-pages:gh-pages

  - ssh bill bundle-install Jekyll_Admin
  - ssh bill jekyll-build Jekyll_Admin

  - ssh bill list git/Jekyll_Admin
  - ssh bill list www/Jekyll_Admin

after_failure:
  - echo 'after_failure asks - Where did you go wrong?'

after_success:    ## To-Do check jekyll-build with curl or something
  - echo 'after_success states - No errors, this time...'

after_script:
  - echo 'after_script is all good!'
