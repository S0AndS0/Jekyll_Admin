#!/usr/bin/env bash

__SOURCE__="${BASH_SOURCE[0]}"
while [[ -h "${__SOURCE__}" ]]; do
    __SOURCE__="$(find "${__SOURCE__}" -type l -ls | sed -n 's@^.* -> \(.*\)@\1@p')"
done
__DIR__="$(cd -P "$(dirname "${__SOURCE__}")" && pwd)"
__NAME__="${__SOURCE__##*/}"
__AUTHOR__='S0AndS0'
__DESCRIPTION__='Initializes Jekyll under gh-pages branch within named repository'


## Provides 'failure'
source "${__DIR__}/shared_functions/failure"
trap 'failure "LINENO" "BASH_LINENO" "${BASH_COMMAND}" "${?}"' ERR

## Provides: argument_parser <arg-array-reference> <acceptable-arg-reference>
source "${__DIR__}/shared_functions/arg_parser"

## Provides: __license__ <description> <author>
source "${__DIR__}/shared_functions/license"

_config_dir="${HOME}/.config/jekyll-build"


usage(){
    _message="${1}"
    _repo_name="${_repo_name:-repository-name}"
    cat <<EOF
## Usage
# ssh ${USER}@host-or-ip ${__NAME__} ${_repo_name}
#
# ${__DESCRIPTION__}
#
# --github-api-token "$(<"/path/to/github-api-token")"
# --github-api-token="yoUrg1thubAPIt0k3n"
#  Saves contence of string passed to
#    ${_config_dir}/github-api-token
#  This allows for the jekyll-build script, where available, to pass
#  the API key during the build process.
#
# -l --license
# Shows script or project license then exits
#
# -h    --help help
#  Displays this message and exits
EOF
    if [ -n "${_message}" ] && [[ "${_message}" != '0' ]]; then
        printf 'Error - %s\n' "${_message}" >&2
    fi
}

_args=("${@:?# No arguments provided try: ${__NAME__} help}")
_valid_args=('--help|-h|help:bool' '--github-api-token|github-api-token:print')
argument_parser '_args' '_valid_args'
_exit_status="$?"

if ((_help)) || ((_exit_status)); then
    usage "${_exit_status}"
    exit "${_exit_status}"
elif ((_license)); then
    __license__ "${__DESCRIPTION__}" "${__AUTHOR__}"
    exit 0
fi


if [ -n "${_github_api_token}" ]; then
    mkdir -vp "${_config_dir}"
    tee "${_config_dir}/github-api-token" 1>/dev/null <<EOF
${_github_api_token}
EOF
else
    usage 'missing "--github-api-token" argument!'
    exit "1"
fi

printf '%s finished!\n' "${__NAME__}"
