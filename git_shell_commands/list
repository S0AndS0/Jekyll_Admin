#!/usr/bin/env bash

__SOURCE__="${BASH_SOURCE[0]}"
while [[ -h "${__SOURCE__}" ]]; do
	__SOURCE__="$(find "${__SOURCE__}" -type l -ls | sed -n 's@^.* -> \(.*\)@\1@p')"
done
__DIR__="$(cd -P "$(dirname "${__SOURCE__}")" && pwd)"
__NAME__="${__SOURCE__##*/}"
__PATH__="${__DIR__}/${__NAME__}"

## Provides: argument_parser <arg-array-reference> <acceptable-arg-reference>
source "${__DIR__}/shared_functions/arg_parser"

usage(){
	_return_status="${1}"
	_print_path="${_path//${HOME}\//}"
	cat <<EOF
## Usage
# ssh ${USER}@host-or-ip ${__NAME__} ${_print_path}
#
## Runs 'ls -hl' against supplied path eg: ls -hl ~/${_print_path}
#
# -h	--help help
#  Displays this message and exits
#
EOF
	ls -hl "${_path}"
	return "${_return_status:-$?}"
}

_args=("${@:?# No arguments provided try: ${__NAME__} help}")
_valid_args=('--help|-h|help:bool' '--path:path-nil')
argument_parser '_args' '_valid_args'
_exit_status="${?}"

_path="${_path:-${HOME}/git-shell-commands}"

if ((_help)) || ((_exit_status)); then usage "${_exit_status}"; exit "$?"; fi

if [ -d "${HOME}/${_path}" ]; then
	ls -hl "${HOME}/${_path}"; exit $?
elif [ -f "${HOME}/${_path}" ]; then
	ls -hl "${HOME}/${_path}"; exit $?
else
	usage; exit 1
fi

echo "# ${__NAME__} finished"
